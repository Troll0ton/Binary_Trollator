-----------------------------------------------------------------------------
                          X64 TRANSLATED BIN CODE                            
-----------------------------------------------------------------------------

- x64 buffer capacity: 4096

MOV_REG_IMM R12                          | 49 BC 
ABS PTR 8 BYTE                           | 00 50 9C A9 20 56 00 00 
MOV_REG_IMM R13                          | 49 BD 
DOUBLE 8 BYTE                            | 00 00 00 00 00 00 69 40 
PUSH_REG R13                             | 41 55 
MOV_REG_IMM R13                          | 49 BD 
DOUBLE 8 BYTE                            | 00 00 00 00 00 00 59 40 
PUSH_REG R13                             | 41 55 
ADD_REG_IMM RSP                          | 48 81 C4 
INT 8 BYTE                               | 08 00 00 00 00 00 00 00 
ADD_REG_IMM RSP                          | 48 81 C4 
INT 8 BYTE                               | 08 00 00 00 00 00 00 00 
MOV_REG_IMM R13                          | 49 BD 
DOUBLE 8 BYTE                            | 00 00 00 00 00 00 59 40 
PUSH_REG R13                             | 41 55 
MOV_REG_IMM R13                          | 49 BD 
DOUBLE 8 BYTE                            | 00 00 00 00 00 00 69 40 
PUSH_REG R13                             | 41 55 
MOV_XMM0_STK                             | F2 0F 10 44 24 00 
MOV_XMM1_STK                             | F2 0F 10 4C 24 08 
ADDSD_XMM1_XMM0                          | F2 0F 58 C8 
ADD_REG_IMM RSP                          | 48 81 C4 
INT 8 BYTE                               | 08 00 00 00 00 00 00 00 
MOV_STK_XMM1                             | F2 0F 11 4C 24 00 
LEA_RDI_STK_ARG                          | 48 8D 3C 24 
PUSH_REG RBP                             | 40 55 
PUSHA                                    | 41 52 53 52 51 50 
MOV_RBP_RSP                              | 48 89 E5 
ALIGN_STK                                | 48 83 E4 F0 
CALL                                     | E8 
PTR 4 BYTE                               | F1 97 6A FF 
MOV_RSP_RBP                              | 48 89 EC 
POPA                                     | 58 59 5A 5B 41 5A 
POP_REG RBP                              | 40 5D 
ADD_REG_IMM RSP                          | 48 81 C4 
INT 8 BYTE                               | 08 00 00 00 00 00 00 00 
MOV_REG_IMM R13                          | 49 BD 
DOUBLE 8 BYTE                            | 00 00 00 00 00 C4 9B 40 
PUSH_REG R13                             | 41 55 
LEA_RDI_STK_ARG                          | 48 8D 3C 24 
PUSH_REG RBP                             | 40 55 
PUSHA                                    | 41 52 53 52 51 50 
MOV_RBP_RSP                              | 48 89 E5 
ALIGN_STK                                | 48 83 E4 F0 
CALL                                     | E8 
PTR 4 BYTE                               | B7 97 6A FF 
MOV_RSP_RBP                              | 48 89 EC 
POPA                                     | 58 59 5A 5B 41 5A 
POP_REG RBP                              | 40 5D 
ADD_REG_IMM RSP                          | 48 81 C4 
INT 8 BYTE                               | 08 00 00 00 00 00 00 00 
MOV_REG_STK RAX                          | 48 8B 00 24 
ADD_REG_IMM RSP                          | 48 81 C4 
INT 8 BYTE                               | 08 00 00 00 00 00 00 00 
MOV_REG_IMM R13                          | 49 BD 
DOUBLE 8 BYTE                            | 00 00 00 00 00 00 00 00 
ADD_R13_REG RAX                          | 49 01 C1 
PUSH_REG R13                             | 41 55 
LEA_RDI_STK_ARG                          | 48 8D 3C 24 
PUSH_REG RBP                             | 40 55 
PUSHA                                    | 41 52 53 52 51 50 
MOV_RBP_RSP                              | 48 89 E5 
ALIGN_STK                                | 48 83 E4 F0 
CALL                                     | E8 
PTR 4 BYTE                               | 6B 97 6A FF 
MOV_RSP_RBP                              | 48 89 EC 
POPA                                     | 58 59 5A 5B 41 5A 
POP_REG RBP                              | 40 5D 
ADD_REG_IMM RSP                          | 48 81 C4 
INT 8 BYTE                               | 08 00 00 00 00 00 00 00 
MOV_REG_IMM R13                          | 49 BD 
DOUBLE 8 BYTE                            | 00 00 00 00 00 D0 84 40 
PUSH_REG R13                             | 41 55 
MOV_XMM0_STK                             | F2 0F 10 44 24 00 
ADD_REG_IMM RSP                          | 48 81 C4 
INT 8 BYTE                               | 08 00 00 00 00 00 00 00 
MOV_REG_IMM R13                          | 49 BD 
INT 8 BYTE                               | 7B 00 00 00 00 00 00 00 
SHL_REG R13                              | 49 C1 E5 
BYTE                                     | 08 
ADD_R13_REG R12                          | 49 01 D1 
MOV_MEM_XMM0                             | F2 41 0F 11 45 00 
MOV_REG_IMM R13                          | 49 BD 
DOUBLE 8 BYTE                            | 00 00 00 00 00 40 59 40 
PUSH_REG R13                             | 41 55 
MOV_REG_STK RAX                          | 48 8B 00 24 
ADD_REG_IMM RSP                          | 48 81 C4 
INT 8 BYTE                               | 08 00 00 00 00 00 00 00 
MOV_REG_IMM R13                          | 49 BD 
DOUBLE 8 BYTE                            | 00 00 00 00 00 00 00 00 
ADD_R13_REG RAX                          | 49 01 C1 
PUSH_REG R13                             | 41 55 
LEA_RDI_STK_ARG                          | 48 8D 3C 24 
PUSH_REG RBP                             | 40 55 
PUSHA                                    | 41 52 53 52 51 50 
MOV_RBP_RSP                              | 48 89 E5 
ALIGN_STK                                | 48 83 E4 F0 
CALL                                     | E8 
PTR 4 BYTE                               | DF 96 6A FF 
MOV_RSP_RBP                              | 48 89 EC 
POPA                                     | 58 59 5A 5B 41 5A 
POP_REG RBP                              | 40 5D 
ADD_REG_IMM RSP                          | 48 81 C4 
INT 8 BYTE                               | 08 00 00 00 00 00 00 00 
SUB_REG_IMM RSP                          | 48 81 FC 
INT 8 BYTE                               | 08 00 00 00 00 00 00 00 
LEA_RDI_STK_ARG                          | 48 8D 3C 24 
PUSH_REG RBP                             | 40 55 
PUSHA                                    | 41 52 53 52 51 50 
MOV_RBP_RSP                              | 48 89 E5 
ALIGN_STK                                | 48 83 E4 F0 
CALL                                     | E8 
PTR 4 BYTE                               | D9 96 6A FF 
MOV_RSP_RBP                              | 48 89 EC 
POPA                                     | 58 59 5A 5B 41 5A 
POP_REG RBP                              | 40 5D 
LEA_RDI_STK_ARG                          | 48 8D 3C 24 
PUSH_REG RBP                             | 40 55 
PUSHA                                    | 41 52 53 52 51 50 
MOV_RBP_RSP                              | 48 89 E5 
ALIGN_STK                                | 48 83 E4 F0 
CALL                                     | E8 
PTR 4 BYTE                               | 83 96 6A FF 
MOV_RSP_RBP                              | 48 89 EC 
POPA                                     | 58 59 5A 5B 41 5A 
POP_REG RBP                              | 40 5D 
ADD_REG_IMM RSP                          | 48 81 C4 
INT 8 BYTE                               | 08 00 00 00 00 00 00 00 
MOV_REG_IMM R13                          | 49 BD 
DOUBLE 8 BYTE                            | 00 00 00 00 00 00 59 40 
PUSH_REG R13                             | 41 55 
MOV_REG_IMM R13                          | 49 BD 
DOUBLE 8 BYTE                            | 00 00 00 00 00 00 49 40 
PUSH_REG R13                             | 41 55 
MOV_XMM0_STK                             | F2 0F 10 44 24 00 
MOV_XMM1_STK                             | F2 0F 10 4C 24 08 
SUBSD_XMM1_XMM0                          | F2 0F 5C C8 
ADD_REG_IMM RSP                          | 48 81 C4 
INT 8 BYTE                               | 08 00 00 00 00 00 00 00 
MOV_STK_XMM1                             | F2 0F 11 4C 24 00 
LEA_RDI_STK_ARG                          | 48 8D 3C 24 
PUSH_REG RBP                             | 40 55 
PUSHA                                    | 41 52 53 52 51 50 
MOV_RBP_RSP                              | 48 89 E5 
ALIGN_STK                                | 48 83 E4 F0 
CALL                                     | E8 
PTR 4 BYTE                               | 1C 96 6A FF 
MOV_RSP_RBP                              | 48 89 EC 
POPA                                     | 58 59 5A 5B 41 5A 
POP_REG RBP                              | 40 5D 
ADD_REG_IMM RSP                          | 48 81 C4 
INT 8 BYTE                               | 08 00 00 00 00 00 00 00 
MOV_REG_IMM R13                          | 49 BD 
DOUBLE 8 BYTE                            | 00 00 00 00 00 00 37 40 
PUSH_REG R13                             | 41 55 
MOV_REG_IMM R13                          | 49 BD 
DOUBLE 8 BYTE                            | 00 00 00 00 00 00 10 40 
PUSH_REG R13                             | 41 55 
MOV_XMM0_STK                             | F2 0F 10 44 24 00 
MOV_XMM1_STK                             | F2 0F 10 4C 24 08 
DIVSD_XMM1_XMM0                          | F2 0F 5E C8 
ADD_REG_IMM RSP                          | 48 81 C4 
INT 8 BYTE                               | 08 00 00 00 00 00 00 00 
MOV_STK_XMM1                             | F2 0F 11 4C 24 00 
LEA_RDI_STK_ARG                          | 48 8D 3C 24 
PUSH_REG RBP                             | 40 55 
PUSHA                                    | 41 52 53 52 51 50 
MOV_RBP_RSP                              | 48 89 E5 
ALIGN_STK                                | 48 83 E4 F0 
CALL                                     | E8 
PTR 4 BYTE                               | B5 95 6A FF 
MOV_RSP_RBP                              | 48 89 EC 
POPA                                     | 58 59 5A 5B 41 5A 
POP_REG RBP                              | 40 5D 
ADD_REG_IMM RSP                          | 48 81 C4 
INT 8 BYTE                               | 08 00 00 00 00 00 00 00 
RET                                      | C3 
RET                                      | C3 
